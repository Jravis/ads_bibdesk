#!/bin/sh
# ADS to BibDesk -- frictionless import of ADS publications into BibDesk
# Copyright (C) 2011  Rui Pereira <rui.pereira@gmail.com>
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# ugliest hack in the world - harcoded/compressed strings of both applescript and python scripts as in the automator actions
py=""
scpt="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"
tmpdir=$(python -c "import tempfile; print tempfile.mkdtemp()")
python -c "import binascii,zlib;\
           out=open('${tmpdir}/py.py', 'w'); print >> out, zlib.decompress(binascii.a2b_base64('${py}')); \
           out=open('${tmpdir}/scpt.scpt', 'w'); print >> out, zlib.decompress(binascii.a2b_base64('${scpt}'))"

# go the tmp directory
cd $tmpdir

# fetch arXiv bibcodes from BibDesk using an applescript
bibcodes=$(cat << EOF | osascript -
tell document 1 of application "BibDesk"
	set bibcodes to {}
	repeat with thePub in publications
		if (count (every field of thePub whose name is "Adsurl" and (value contains "arxiv" or value contains "astro.ph"))) > 0 then
			-- get bibcode from ADSurl
			set ADSurl to (value of every field of thePub whose name is "Adsurl")
			set AppleScript's text item delimiters to "/"
			set end of bibcodes to last text item of text item 1 of ADSurl
		end if
	end repeat
end tell
set AppleScript's text item delimiters to " "
return bibcodes as text
EOF
)

if [ "$bibcodes" == "" ]; then echo "Nothing to update!"; exit; fi
# check for changed bibcodes
nbibcodes=$(echo $bibcodes | wc -w)
python -c "import math;n=$nbibcodes;t=math.ceil(n*15./60.); print 'Checking %i ArXiv entries for changes...\n(to prevent ADS flooding this will take a while, check back in around %i %s)' % (n, t, t > 1 and 'minutes' or 'minute')"
python py.py -u $bibcodes
# python py.py -u $bibcodes --debug # DEBUG MODE

changed=$(wc -l changed_arxiv | awk '{print $1}')
if [ "$changed" -gt "0" ]
then
    echo ""; echo "Updating $changed entries, continue? (y/[n])"
    read -n1 -s continue
else
    echo ""; echo "Nothing to update!"
    exit
fi
if [ "$continue" != "Y" ] && [ "$continue" != "y" ]
then exit
fi

echo "(to prevent ADS flooding, we will wait for a while between each update, so go grab a coffee)"
# update bibcodes
for bibcode in `cat changed_arxiv`; do
    echo "Updating $bibcode..."
    # sleep 1 minute if updating a lot of stuff, if not wait only 10s
    if [ "$changed" -gt "10" ]
    then
        sleep 60
    else
        sleep 15
    fi
    osascript scpt.scpt `python py.py ${bibcode}`
done

#clean up
cd - > /dev/null
rm -rf $tmpdir
