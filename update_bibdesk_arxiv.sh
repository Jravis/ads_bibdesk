#!/bin/sh
# ADS to BibDesk -- frictionless import of ADS publications into BibDesk
# Copyright (C) 2011  Rui Pereira <rui.pereira@gmail.com>
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# ugliest hack in the world - harcoded/compressed strings of both applescript and python scripts as in the automator actions
py=""
scpt="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"
tmpdir=$(python -c "import tempfile; print tempfile.mkdtemp()")
python -c "import binascii,zlib;\
           out=open('${tmpdir}/py.py', 'w'); print >> out, zlib.decompress(binascii.a2b_base64('${py}')); \
           out=open('${tmpdir}/scpt.scpt', 'w'); print >> out, zlib.decompress(binascii.a2b_base64('${scpt}'))"

# go the tmp directory
cd $tmpdir

# fetch arXiv bibcodes from BibDesk using an applescript
bibcodes=$(cat << EOF | osascript -
tell document 1 of application "BibDesk"
	set bibcodes to {}
	repeat with thePub in publications
		if (count (every field of thePub whose name is "Adsurl" and (value contains "arxiv" or value contains "astro.ph"))) > 0 then
			-- get bibcode from ADSurl
			set ADSurl to (value of every field of thePub whose name is "Adsurl")
			set AppleScript's text item delimiters to "/"
			set end of bibcodes to last text item of text item 1 of ADSurl
		end if
	end repeat
end tell
set AppleScript's text item delimiters to " "
return bibcodes as text
EOF
)

if [ "$bibcodes" == "" ]; then echo "Nothing to update!"; exit; fi
# check for changed bibcodes
nbibcodes=$(echo $bibcodes | wc -w)
python -c "import math;n=$nbibcodes;t=math.ceil(n*15./60.); print 'Checking %i ArXiv entries for changes...\n(to prevent ADS flooding this will take a while, check back in around %i %s)' % (n, t, t > 1 and 'minutes' or 'minute')"
python py.py -u $bibcodes
# python py.py -u $bibcodes --debug # DEBUG MODE

changed=$(wc -l changed_arxiv | awk '{print $1}')
if [ "$changed" -gt "0" ]
then
    echo ""; echo "Updating $changed entries, continue? (y/[n])"
    read -n1 -s continue
else
    echo ""; echo "Nothing to update!"
    exit
fi
if [ "$continue" != "Y" ] && [ "$continue" != "y" ]
then exit
fi

echo "(to prevent ADS flooding, we will wait for a while between each update, so go grab a coffee)"
# update bibcodes
for bibcode in `cat changed_arxiv`; do
    echo "Updating $bibcode..."
    # sleep 1 minute if updating a lot of stuff, if not wait only 10s
    if [ "$changed" -gt "10" ]
    then
        sleep 60
    else
        sleep 15
    fi
    osascript scpt.scpt `python py.py ${bibcode}`
done

#clean up
cd - > /dev/null
rm -rf $tmpdir
